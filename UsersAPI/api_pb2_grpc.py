# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from UsersAPI import api_pb2 as api__pb2


class UsersStub(object):
  """The Users API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateToken = channel.unary_unary(
        '/magicleap.datasets.users.Users/CreateToken',
        request_serializer=api__pb2.CreateTokenRequest.SerializeToString,
        response_deserializer=api__pb2.Token.FromString,
        )


class UsersServicer(object):
  """The Users API.
  """

  def CreateToken(self, request, context):
    """
    Tokens

    Create a token
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateToken': grpc.unary_unary_rpc_method_handler(
          servicer.CreateToken,
          request_deserializer=api__pb2.CreateTokenRequest.FromString,
          response_serializer=api__pb2.Token.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'magicleap.datasets.users.Users', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
